// During each recursive call, it prints the current state of the 
stack, helping you visualize how the function calls are stacked up.
#include <stdio.h>
// Function to calculate factorial using recursion
int factorial(int n)
{
 // Display the state of the stack
 printf("Calculating factorial(%d)\n", n);
 // Base case: factorial of 0 is 1
 if (n == 0 || n == 1)
 {
 printf("Base case reached: factorial(%d) = 1\n", n);
 return 1;
 }
 else
 {
 // Recursive case: factorial(n) = n * factorial(n-1)
 int result = n * factorial(n - 1);
 printf("factorial(%d) = %d * factorial(%d) = %d\n", n, n, n 
- 1, result);
 return result;
 }
}
int main()
{
 int num;
 // Input: Number for which factorial needs to be calculated
 printf("Enter a number: ");
 scanf("%d", &num);
 // Calculate and display the factorial
 int result = factorial(num);
 printf("Factorial of %d = %d\n", num, result);
 return 0;
}
